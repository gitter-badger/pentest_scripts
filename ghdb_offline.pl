#!/usr/bin/perl
# GHDB list from google dorks: https://www.exploit-db.com/google-hacking-database/
# Author: Sanjeev Jaiswal
# Currently It will work if it contains search/image and q= keywords.
use warnings;
use WWW::Mechanize;
 
# Initialize WWW::Mechanize
my $mech = WWW::Mechanize->new();
 
# url to get latest count of google hack
my $url = "https://www.exploit-db.com/google-hacking-database/";
 
$mech->get( $url );
 
# We need to get only the first url linked with ghdb keyword
my $link = $mech->find_link( url_regex => qr/ghdb/ );
 
#This number shows the number of Google hacks posted till date here
my ($ghdb_count) = $link->[0] =~ m|ghdb/(\d+)/|;
 
# We need below url to parse through each google hack
my $exploit_url = "http://www.exploit-db.com/ghdb/";
 
# First check if ghdb.txt exists or not. It not then just touch it
open FILE, ">", "ghdb.txt" unless -e "ghdb.txt";
close(FILE);
 
# Let\'s add those google hacks in a file called ghdb.txt.
# Open in Read/Write mode
open FH, "+<", "ghdb.txt" or die "Can\'t open ghdb.txt: $!\n";
 
chomp( my @ghdb_content = <FH> );
my $present_count = 0;
($present_count) = split(/\./, $ghdb_content[$#ghdb_content]) if(scalar @ghdb_content > 1);
 
# To get rid of wide character in print warning
binmode(FH, ":utf8");
 
for( ($present_count + 1) .. $ghdb_count ){
  my $final_url = $exploit_url."$_";
   
  # We need to initialize it each time we request new url.
  # Need to figure out to reduce number of requests from our end
  my $mc = WWW::Mechanize->new();
  $mc->get( $final_url );
  my $dork = $mc->content();
 
  # Its not generic but works in most cases.
  # It will not work if there is not google search available in ghdb/<number>/ page
  my $link = $mc->find_link( url_regex => qr/(search|image).*?q=/);
 
  # to get rid of Non-ASCII characters
  $link->[1] =~  s/[^[:ascii:]]+//g if($link->[1]); 
  print FH "$_. $link->[1]\n" if($link->[1]);
  print FH "$_. has some issue in parsing link\n" unless($link->[1])
}
 
# Always close the File Handle
close(FH);


__DATA__
SAMPLE OUTPUT:
1. "cacheserverreport for" "This analysis was produced by calamaris"
2. intitle:"Ganglia" "Cluster Report for"
3. intitle:"Index of" dbconvert.exe chats
4. intitle:"Apache HTTP Server" intitle:"documentation"
5. "Error Diagnostic Information" intitle:"Error Occurred While"
6. intitle:"Index of" finance.xls
7. intitle:index.of finances.xls
8. "# Dumping data for table"
9. intitle:index.of .bash_history
10. intitle:index.of .sh_history
